== Rack Cache Example

This is a example app to demonstrate how to use http-caching with Rack:Cache and Memcached on the Heroku Cedar stack


== Instructions

1.  Add the dalli and rack-cache gem to the Gemfile:
      gem 'dalli'
      gem 'rack-cache'
  
2.  Tell cache_store in production.rb to use dalli and config midleware from the Heroku env.:
      In production.rb:

      # Use a different cache store in production
      # config.cache_store = :mem_cache_store
      config.cache_store = :dalli_store
      config.middleware.use Rack::Cache,
        :verbose => true,
        :metastore => "memcached://#{ENV['MEMCACHE_SERVERS']}",
        :entitystore => "memcached://#{ENV['MEMCACHE_SERVERS']}"

3.  Generate etag and set expires in your controller action. 
    In this static example I generate the etag based on the last modified date on the index page template:
    
      def index
        last_modified = File.mtime("#{Rails.root}/app/views/pages/index.html.erb")
        fresh_when last_modified: last_modified , public: true, etag: last_modified
        expires_in 10.seconds, public: true
      end
      
4.  Add Memcached to your Heroku app.
